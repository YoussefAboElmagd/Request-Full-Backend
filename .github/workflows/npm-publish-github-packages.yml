name: Deploy Node.js App to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            export DEBIAN_FRONTEND=noninteractive
            export HOME=/home/${{ secrets.USERNAME }}
            export APP_DIR=$HOME/apps/RequestCiCd
            export REPO_URL=git@github.com:YoussefAboElmagd/Request-Full-Backend.git

            echo ">>> Waiting for apt lock..."
            while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
              echo "Another apt process is running. Waiting..."
              sleep 5
            done

            echo ">>> Updating apt and installing Git"
            sudo apt-get update -y
            sudo apt-get install -y git || { echo "Git installation failed"; exit 1; }

            echo ">>> Setting up SSH for GitHub"
            mkdir -p $HOME/.ssh
            echo "${{ secrets.PRIVATE_KEY }}" > $HOME/.ssh/id_rsa
            chmod 600 $HOME/.ssh/id_rsa
            ssh-keyscan github.com >> $HOME/.ssh/known_hosts
            chmod 644 $HOME/.ssh/known_hosts

            echo ">>> Testing SSH connection to GitHub"
            ssh -T git@github.com || echo "SSH auth to GitHub failed — continuing"

            echo ">>> Installing NVM and Node.js"
            if ! command -v nvm >/dev/null 2>&1; then
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash || { echo "nvm install failed"; exit 1; }
            fi

            export NVM_DIR=$HOME/.nvm
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" || { echo "Failed to source nvm"; exit 1; }
            nvm install 18 || { echo "Node install failed"; exit 1; }

            echo ">>> Creating app directory"
            mkdir -p $APP_DIR
            cd $APP_DIR || { echo "Failed to enter app dir"; exit 1; }

            echo ">>> Setting permissions"
            chown -R ${{ secrets.USERNAME }}:${{ secrets.USERNAME }} $APP_DIR
            chmod -R 755 $APP_DIR

            echo ">>> Cloning or pulling repository"
            if [ ! -d ".git" ]; then
              rm -rf *
              git clone $REPO_URL . || { echo "Git clone failed"; exit 1; }
            else
              git fetch origin
              git reset --hard origin/main || { echo "Git reset failed"; exit 1; }
            fi

            echo ">>> Installing dependencies"
            timeout 300 npm install --omit=dev --verbose || { echo "npm install failed or timed out"; exit 1; }

            echo ">>> Writing .env file"
            echo "PORT=8020" > .env
            echo "DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}" >> .env

            echo ">>> Installing PM2"
            npm install -g pm2 || { echo "PM2 install failed"; exit 1; }

            echo ">>> Starting or restarting app with PM2"
            pm2 describe RequestCiCd > /dev/null 2>&1 && \
              pm2 restart RequestCiCd || \
              pm2 start server.js --name RequestCiCd

            pm2 save

            echo ">>> Reloading Nginx (optional)"
            sudo nginx -t && sudo systemctl reload nginx || echo "Nginx reload skipped or failed"

            echo ">>> Opening port 8020 (if not already)"
            sudo ufw allow 8020 || echo "Port 8020 may already be open"

            echo "✅ Deployment complete"
